{
  "loc.friendlyName": "Azure CLI",
  "loc.helpMarkDown": "[Learn more about this task](http://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureCLIV2/Readme.md) or [see the Azure CLI documentation](https://docs.microsoft.com/cli/azure/)",
  "loc.description": "Run Azure CLI commands against an Azure subscription in a PowerShell Core/Shell script when running on Linux agent or PowerShell/Powershell Core/Batch script when running on Windows agent.",
  "loc.instanceNameFormat": "Azure CLI $(scriptPath)",
  "loc.releaseNotes": "What's new in Version 2.0:\n- Support for PowerShell and PowerShell Core script. \n- PowerShell Core works with cross-platform agents (Linux, macOS, or Windows), make sure the agent has PowerShell version 6 or more. \n- Powershell script works with only Windows agent, make sure the agent has PowerShell version 5 or below.",
  "loc.group.displayName.advanced": "고급",
  "loc.input.label.connectedServiceNameARM": "Azure Resource Manager connection",
  "loc.input.help.connectedServiceNameARM": "Select an Azure Resource Manager service connection for the deployment",
  "loc.input.label.scriptType": "스크립트 유형",
  "loc.input.help.scriptType": "Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows).",
  "loc.input.label.scriptLocation": "스크립트 위치",
  "loc.input.help.scriptLocation": "Path to script: File path or Inline script",
  "loc.input.label.scriptPath": "스크립트 경로",
  "loc.input.help.scriptPath": "Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory",
  "loc.input.label.inlineScript": "인라인 스크립트",
  "loc.input.help.inlineScript": "You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every azure command. You can also pass predefined and custom variables to this script using arguments \n\n example for PowerShell/PowerShellCore/shell: \naz --version \naz account show \n\n example for batch:\ncall  az --version \ncall az account show",
  "loc.input.label.scriptArguments": "스크립트 인수",
  "loc.input.help.scriptArguments": "스크립트에 전달되는 인수",
  "loc.input.label.powerShellErrorActionPreference": "ErrorActionPreference",
  "loc.input.help.powerShellErrorActionPreference": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your powershell/powershell core script.",
  "loc.input.label.addSpnToEnvironment": "스크립트의 서비스 주체 정보 액세스",
  "loc.input.help.addSpnToEnvironment": "Adds service principal id, service principal key and tenant id of the Azure endpoint you chose to the script's execution environment. You can use variables: `servicePrincipalId`, `servicePrincipalKey` and `tenantId` in your script.\n\nThis is honored only when the Azure endpoint has Service Principal authentication scheme.\n\nSyntax to access environment variables based on script type.\n\nPowershell script: $env:servicePrincipalId\n\nBatch script: %servicePrincipalId% \n\nShell script: $servicePrincipalId",
  "loc.input.label.useGlobalConfig": "전역 Azure CLI 구성 사용",
  "loc.input.help.useGlobalConfig": "false이면, 이 작업은 고유한 별도 [Azure CLI 구성 디렉터리](https://docs.microsoft.com/en-us/cli/azure/azure-cli-configuration?view=azure-cli-latest#cli-configuration-file)를 사용합니다. *병렬* 릴리스에서 Azure CLI 작업을 실행하는 데 사용할 수 있습니다.",
  "loc.input.label.cwd": "작업 디렉터리",
  "loc.input.help.cwd": "스크립트가 실행되는 현재 작업 디렉터리입니다. 비어 있으면 리포(빌드) 또는 아티팩트(릴리스)의 루트이며 이 값은 $(System.DefaultWorkingDirectory)입니다.",
  "loc.input.label.failOnStandardError": "표준 오류 시 실패",
  "loc.input.help.failOnStandardError": "true이면 StandardError 스트림에 오류가 기록될 때 이 작업이 실패합니다. 표준 오류를 무시하고 종료 코드를 사용하여 상태를 확인하려면 이 확인란의 선택을 취소하세요.",
  "loc.input.label.powerShellIgnoreLASTEXITCODE": "Ignore $LASTEXITCODE",
  "loc.input.help.powerShellIgnoreLASTEXITCODE": "false이면 스크립트의 끝에 `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` 줄이 추가됩니다. 이 줄로 인해 외부 명령의 마지막 종료 코드가 PowerShell의 종료 코드로 전파됩니다. true이면 줄이 스크립트의 끝에 추가되지 않습니다.",
  "loc.messages.ScriptReturnCode": "다음 반환 코드로 스크립트가 종료됨: %d",
  "loc.messages.ScriptFailed": "다음 오류가 발생하여 스크립트 실패: %s",
  "loc.messages.ScriptFailedStdErr": "Script has output to stderr. Failing as failOnStdErr is set to true.",
  "loc.messages.ScriptFailedWithExitCode": "Script failed with exit code: %d",
  "loc.messages.UnsupportedEndpointScheme": "지원되지 않는 서비스 연결 인증 체계: AzureRM의 경우 서비스 주체",
  "loc.messages.AzureSDKNotFound": "이 컴퓨터에 Azure CLI 2.x가 설치되어 있지 않습니다.",
  "loc.messages.FailedToLogout": "로그아웃하는 동안 다음 오류가 발생했습니다. %s",
  "loc.messages.LoginFailed": "Azure에 로그인하지 못했습니다.",
  "loc.messages.MSILoginFailed": "관리 서비스 ID를 사용한 Azure 로그인에 실패했습니다.",
  "loc.messages.AuthSchemeNotSupported": "인증 체계 %s은(는) 지원되지 않습니다.",
  "loc.messages.ErrorInSettingUpSubscription": "구독을 설정하는 중 오류가 발생했습니다.",
  "loc.messages.SettingAzureConfigDir": "AZURE_CONFIG_DIR 환경 변수를 %s(으)로 설정하는 중",
  "loc.messages.SettingAzureCloud": "활성 클라우드를 %s(으)로 설정하는 중",
  "loc.messages.JS_InvalidFilePath": "Script file could not be found at specified script location: '%s'. Please verify the script exists at the specified path. If you want to use inline script, specify input `Script Location` as `inlineScript`.",
  "loc.messages.JS_InvalidErrorActionPreference": "잘못된 ErrorActionPreference '%s'입니다. 값은 'Stop', 'Continue', 'SilentlyContinue' 중 하나여야 합니다.",
  "loc.messages.GlobalCliConfigAgentVersionWarning": "2.115.0 이전의 에이전트 버전에서는 전역 Azure CLI 구성만 사용할 수 있습니다.",
  "loc.messages.UnacceptedScriptLocationValue": "%s is not a valid value for task input 'Script Location' (scriptLocation in YAML). Value can either be'inlineScript' or 'scriptPath'"
}