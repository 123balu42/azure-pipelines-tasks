{
  "loc.friendlyName": "Github Release",
  "loc.helpMarkDown": "[More Information](https://github.com/Microsoft/azure-pipelines-tasks/blob/master/Tasks/GithubReleaseV0/README.md)",
  "loc.description": "Create, edit or discard the github release",
  "loc.instanceNameFormat": "$(action) GitHub Release",
  "loc.input.label.githubEndpoint": "GitHub Connection",
  "loc.input.help.githubEndpoint": "Select the service endpoint for your GitHub connection. Click the 'Manage' link to create a new service endpoint. To know more about service connections [click here.](https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=vsts#sep-github)",
  "loc.input.label.repositoryName": "Repository",
  "loc.input.help.repositoryName": "Select the name of github repository where github releases will be created.",
  "loc.input.label.action": "Action",
  "loc.input.help.action": "Select the type of release operation you want perform. This task can create, edit or discard a github release.",
  "loc.input.label.target": "Target",
  "loc.input.help.target": "This is the commit SHA for which the github release will be created. E.g. 48b11d8d6e92a22e3e9563a3f643699c16fd6e27. You can also use variables here.",
  "loc.input.label.tagSelection": "Tag type",
  "loc.input.help.tagSelection": "Configure the tag to be used for release creation. 'Git tag' option automatically takes the tag which is associated with this commit. Use 'User specified tag' option in case you want to manually provide a tag.",
  "loc.input.label.tag": "Tag",
  "loc.input.help.tag": "Specify the tag for which you want to create, edit or discard a release. You can also use variables here. E.g. $(tagName).",
  "loc.input.label.releaseTitle": "Release title",
  "loc.input.help.releaseTitle": "Specify the title of the github release. If left empty, the tag will be used as release title.",
  "loc.input.label.releaseNotesSelection": "Release notes source",
  "loc.input.help.releaseNotesSelection": "Specify the description of github release. Use 'Release notes file' option if you wish that the contents of a file to be copied as github release notes. Use 'Inline release notes' option if you want to manually enter the release notes.",
  "loc.input.label.releaseNotesFile": "Release notes file path",
  "loc.input.help.releaseNotesFile": "Select the file which contains the release notes.",
  "loc.input.label.releaseNotesInput": "Release notes",
  "loc.input.help.releaseNotesInput": "Type your release notes here. Accepts markdown.",
  "loc.input.label.githubReleaseAsset": "Assets",
  "loc.input.help.githubReleaseAsset": "Specify the files to be uploaded as assets for the release. You can use wildcard characters to specify set of files. E.g. $(Build.ArtifactStagingDirectory)/*.zip. You can also specify multiple patterns- one per line. By default, all files in $(Build.ArtifactStagingDirectory) directory will be uploaded.",
  "loc.input.label.assetUploadMode": "Asset upload mode",
  "loc.input.help.assetUploadMode": "Use 'Delete existing assets' option, if you want to first delete any existing assets in the release and then upload all the assets. Use 'Replace existing assets' option, if you want to replace any assets that have the same name.",
  "loc.input.label.isDraft": "Draft release",
  "loc.input.help.isDraft": "This option specifies if the release has to be saved as a draft release. If unchecked, the release will be published.",
  "loc.input.label.isPrerelease": "Pre release",
  "loc.input.help.isPrerelease": "This option specifies if the release has to be marked as a pre-release.",
  "loc.input.label.changeLog": "Add changelog",
  "loc.input.help.changeLog": "Using this option you can generate and append list of changes to release notes. The list of changes(commits and issues) between this and last published release will be generated and appended to release notes.",
  "loc.messages.CreatingRelease": "Creating release for tag: %s",
  "loc.messages.CreateReleaseError": "An error occurred while creating release.",
  "loc.messages.CreateReleaseSuccess": "Release created successfully at %s",
  "loc.messages.DiscardingRelease": "Discarding release for tag: %s",
  "loc.messages.DiscardReleaseError": "An error occurred while discarding release.",
  "loc.messages.NoReleaseFoundCreateRelease": "No existing release found to edit. Creating one with the tag: %s",
  "loc.messages.DiscardReleaseSuccess": "Release discarded successfully",
  "loc.messages.EditingRelease": "Editing release with tag: %s",
  "loc.messages.EditReleaseError": "An error occurred while editing release.",
  "loc.messages.EditReleaseSuccess": "Release edited successfully",
  "loc.messages.GetReleasesError": "An error occurred while fetching releases",
  "loc.messages.GetTagsError": "An error occurred while fetching tags",
  "loc.messages.GetBranchError": "An error occurred while fetching branch",
  "loc.messages.MissingAssetError": "File not found: %s",
  "loc.messages.NoReleaseFoundToDiscard": "No release found for tag: %s. Discarding release failed.",
  "loc.messages.MultipleReleasesFoundError": "More than 1 release found for tag: %s.",
  "loc.messages.DuplicateAssetFound": "Duplicate asset found: %s",
  "loc.messages.SkipDuplicateAssetFound": "Duplicate asset found: %s. Skipping...",
  "loc.messages.DeletingDuplicateAsset": "Deleting duplicate asset: %s",
  "loc.messages.MultipleTagFound": "More than 1 tag found for given commit: %s",
  "loc.messages.DuplicateAssetDeletedSuccessfully": "Duplicate asset deleted successfully: %s\n Uploading the asset again",
  "loc.messages.AssetDeletedSuccessfully": "Asset %s deleted successfully",
  "loc.messages.NoTagFound": "No tag found for provided target: %s. Skipping further steps",
  "loc.messages.CommitDiffBehind": "Cannot compute the commit difference as the provided target commit is older than the commit of last published release.",
  "loc.messages.CommitDiffEqual": "No changes found. The provided target commit is same as the commit of last published release.",
  "loc.messages.ErrorDeletingDuplicateAsset": "An error occurred while deleting duplicate asset: %s",
  "loc.messages.ErrorDeletingAsset": "An error occurred while deleting asset: %s",
  "loc.messages.UploadingAsset": "Uploading asset: %s",
  "loc.messages.UploadingAssets": "Uploading assets...",
  "loc.messages.UploadAssetError": "An error occurred while uploading asset: %s",
  "loc.messages.UploadAssetSuccess": "Uploaded asset: %s",
  "loc.messages.DeleteAllAsset": "Deleting assets...",
  "loc.messages.DeletingAsset": "Deleting asset: %s",
  "loc.messages.NoAssetFoundToDelete": "No assets found to delete.",
  "loc.messages.NoAssetFoundToUpload": "No assets found to upload.",
  "loc.messages.ReleaseNotesFileIsDirectoryError": "Release notes file: %s is a directory and not a file. Release notes will be set as empty.",
  "loc.messages.AssetIsDirectoryError": "Asset is a directory and not a file. Skipping uploading directory: %s",
  "loc.messages.GetLatestReleaseError": "Error fetching latest release",
  "loc.messages.GetCommitsListError": "Error fetching list of commits",
  "loc.messages.GetReposError": "Error fetching repos",
  "loc.messages.GetCommitsByShaError": "Error fetching the initial commit",
  "loc.messages.ReleaseAlreadyExists": "Failed to create release. Release already exists for tag: %s",
  "loc.messages.ComputingChangeLog": "Computing changes made in this release..."
}