{
    "id": "3B5693D4-5777-4FEE-862A-BD2B7A374C68",
    "name": "PowerShellOnTargetMachines",
    "friendlyName": "PowerShell on Target Machines",
    "description": "Execute PowerShell scripts on remote machine(s)",
    "helpMarkDown": "[More Information](https://go.microsoft.com/fwlink/?linkid=627414)",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 3,
        "Minor": 0,
        "Patch": 0
    },
    "groups": [
        {
            "name": "ScriptOptions",
            "displayName": "Script options",
            "isExpanded": true
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": false
        },
        {
            "name": "ErrorHandlingOptions",
            "displayName": "Error handling options",
            "isExpanded": true
        }
    ],
    "releaseNotes": "What's new in Version 3.0: <br/>&nbsp;&nbsp; Use invoke-command to perform remote script execution",
    "minimumAgentVersion": "2.0.0",
    "inputs": [
        {
            "name": "Machines",
            "type": "multiLine",
            "label": "Machines",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Provide a comma separated list of machine IP addresses or FQDNs along with ports. Port is defaulted based on the selected protocol. <br>Eg: dbserver.fabrikam.com,dbserver_int.fabrikam.com:5986,192.168.12.34:5986 <br>Or provide output variable of other tasks. Eg: $(variableName) <br>If you are using HTTPS, name/IP of machine should match the CN in the certificate."
        },
        {
            "name": "UserName",
            "type": "string",
            "label": "Admin Login",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Administrator login for the target machines. <br> Eg: Format: Domain\\Admin User, Admin User@Domain, .\\Admin User"
        },
        {
            "name": "UserPassword",
            "type": "string",
            "label": "Password",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Administrator password for the target machines. <br>It can accept variable defined in Build/Release definitions as '$(passwordVariable)'. <br>You may mark variable type as 'secret' to secure it."
        },
        {
            "name": "Protocol",
            "type": "radio",
            "label": "Protocol",
            "required": false,
            "defaultValue": "Https",
            "options": {
                "Http": "HTTP",
                "Https": "HTTPS"
            },
            "helpMarkDown": "Select the protocol to use for the WinRM connection with the machine(s). Default is HTTPS."
        },
        {
            "name": "TestCertificate",
            "type": "boolean",
            "label": "Test Certificate",
            "defaultValue": "true",
            "visibleRule": "Protocol = Https",
            "required": false,
            "helpMarkDown": "Select the option to skip validating the authenticity of the machine's certificate by a trusted certification authority. The parameter is required for the WinRM HTTPS protocol."
        },
        {
            "name": "ScriptType",
            "type": "radio",
            "label": "Script Type",
            "defaultValue": "FilePath",
            "options": {
                "FilePath": "File Path",
                "Inline": "Inline"
            },
            "helpMarkDown": "The type of script to execute: Inline or File Path",
            "groupName": "ScriptOptions"
        },
        {
            "name": "ScriptPath",
            "type": "string",
            "label": "Script File Path",
            "defaultValue": "",
            "visibleRule": "ScriptType = FilePath",
            "required": true,
            "helpMarkDown": "Location of the PowerShell script on the target machines or on a UNC path like C:\\BudgetIT\\Web\\Deploy\\Website.ps1",
            "groupName": "ScriptOptions"
        },
        {
            "name": "ScriptArguments",
            "type": "string",
            "label": "Script Arguments",
            "defaultValue": "",
            "required": false,
            "visibleRule": "ScriptType = FilePath",
            "properties": {
                "editorExtension": "ms.vss-services-azure.parameters-grid"
            },
            "helpMarkDown": "Arguments for the PowerShell script. Can be ordinal parameters or named parameters like -testParam test",
            "groupName": "ScriptOptions"
        },
        {
            "name": "InlineScript",
            "type": "multiLine",
            "label": "Script",
            "visibleRule": "ScriptType = Inline",
            "required": true,
            "defaultValue": "# Write your powershell commands here.\n\nWrite-Output \"Hello World\"",
            "properties": {
                "resizable": "true",
                "rows": "10",
                "maxLength": "5000"
            },
            "helpMarkDown": "",
            "groupName": "ScriptOptions"
        },
        {
            "name": "ErrorActionPreference",
            "type": "pickList",
            "label": "ErrorActionPreference",
            "required": false,
            "defaultValue": "stop",
            "options": {
                "stop": "Stop",
                "continue": "Continue",
                "silentlyContinue": "SilentlyContinue"
            },
            "helpMarkDown": "Prepends the line `$ErrorActionPreference = 'VALUE'` at the top of your script.",
            "groupName": "ErrorHandlingOptions"
        },
        {
            "name": "failOnStderr",
            "type": "boolean",
            "label": "Fail on Standard Error",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "If this is true, this task will fail if any errors are written to the error pipeline, or if any data is written to the Standard Error stream. Otherwise the task will rely on the exit code to determine failure.",
            "groupName": "ErrorHandlingOptions"
        },
        {
            "name": "ignoreLASTEXITCODE",
            "type": "boolean",
            "label": "Ignore $LASTEXITCODE",
            "required": false,
            "defaultValue": "false",
            "helpMarkDown": "If this is false, the line `if ((Test-Path -LiteralPath variable:\\LASTEXITCODE)) { exit $LASTEXITCODE }` is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code of powershell. Otherwise the line is not appended to the end of your script.",
            "groupName": "ErrorHandlingOptions"
        },
        {
            "name": "WorkingDirectory",
            "type": "string",
            "label": "Working Directory",
            "required": false,
            "defaultValue": "",
            "helpMarkDown": "Working directory where the script is run.",
            "groupName": "advanced"
        },
        {
            "name": "RunPowershellInParallel",
            "type": "boolean",
            "label": "Run PowerShell in Parallel",
            "defaultValue": "true",
            "required": false,
            "helpMarkDown": "Setting it to true will run the PowerShell scripts in parallel on the target machines.",
            "groupName": "advanced"
        }
    ],
    "instanceNameFormat": "Run PowerShell on $(Machines)",
    "execution": {
        "PowerShell3": {
            "target": "PowerShellOnTargetMachines.ps1"
        }
    },
    "messages": {
        "PS_TM_NoMachineExistsUnderEnvironment0ForDeployment": "No machine exists under environment: '{0}' for deployment",
        "PS_TM_DeploymentStartedForMachine0": "Deployment started for machine: '{0}'",
        "PS_TM_DeploymentStatusForMachine01": "Deployment status for machine '{0}' : '{1}'",
        "PS_TM_DeploymentFailedOnMachine0WithFollowingMessage1": "Deployment failed on machine '{0}' with following message : '{1}'",
        "PS_TM_ResourceDoesnotHaveWinRMServiceConfigured": "Resource: '{0}' does not have WinRM service configured. Configure WinRM service on the Azure VM Resources. Refer for more details '{1}'",
        "PS_TM_0PortWasNotProvidedForResource1": "{0} port was not provided for resource '{1}'",
        "PS_TM_DeploymentOnOneOrMoreMachinesFailed": "Deployment on one or more machines failed."
    }
}