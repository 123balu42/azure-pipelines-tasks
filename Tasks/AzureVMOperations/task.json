{
    "id": "28dda418-21d5-4425-bd34-3538cffa6259",
    "name": "AzureVMOperations",
    "friendlyName": "Azure VM Operations",
    "description": "Manage virtual machines",
    "helpUrl": "https://docs.microsoft.com/azure/devops/pipelines/tasks/deploy/azure-vm-operations",
    "helpMarkDown": "[Learn more about this task](https://aka.ms/azurevmoperationsreadme)",
    "category": "Deploy",
    "releaseNotes": "- Added VM operations that are present in AzureResourceGroupDeployment@2 task",
    "visibility": [
        "Build",
        "Release"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 0
    },
    "demands": [],
    "minimumAgentVersion": "2.119.1",
    "groups": [
        {
            "name": "AzureDetails",
            "displayName": "Azure Details",
            "isExpanded": true
        },
        {
            "name": "AdvancedDeploymentOptions",
            "displayName": "Advanced deployment options for virtual machines",
            "isExpanded": true,
            "visibleRule": "action = Select Resource Group"
        }
    ],
    "inputs": [
        {
            "name": "ConnectedServiceName",
            "aliases": [
                "azureSubscription"
            ],
            "type": "connectedService:AzureRM",
            "label": "Azure subscription",
            "defaultValue": "",
            "required": true,
            "groupName": "AzureDetails",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment."
        },
        {
            "name": "action",
            "type": "pickList",
            "label": "Action",
            "defaultValue": "Select Resource Group",
            "required": true,
            "groupName": "AzureDetails",
            "helpMarkDown": "Action to be performed on the Azure resources or resource group.",
            "options": {
                "Select Resource Group": "Configure virtual machine deployment options",
                "Start": "Start virtual machines",
                "Stop": "Stop virtual machines",
                "StopWithDeallocate": "Stop and deallocate virtual machines",
                "Restart": "Restart virtual machines",
                "Delete": "Delete virtual machines"
            }
        },
        {
            "name": "resourceGroupName",
            "type": "pickList",
            "label": "Resource group",
            "required": true,
            "groupName": "AzureDetails",
            "helpMarkDown": "Provide the name of a resource group.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "enableDeploymentPrerequisites",
            "type": "pickList",
            "label": "Enable prerequisites",
            "defaultValue": "None",
            "groupName": "AdvancedDeploymentOptions",
            "options": {
                "None": "None",
                "ConfigureVMwithWinRM": "Configure with WinRM agent",
                "ConfigureVMWithDGAgent": "Configure with Deployment Group agent"
            },
            "helpMarkDown": "These options would be applicable only when the Resource group contains virtual machines. <br><br>Choosing Deployment Group option would configure Deployment Group agent on each of the virtual machines. <br><br>Selecting WinRM option configures Windows Remote Management (WinRM) listener over HTTPS protocol on port 5986, using a self-signed certificate. This configuration is required for performing deployment operation on Azure machines. If the target Virtual Machines are backed by a Load balancer, ensure Inbound NAT rules are configured for target port (5986)."
        },
        {
            "name": "deploymentGroupEndpoint",
            "aliases": [
                "teamServicesConnection"
            ],
            "type": "connectedService:ExternalTfs",
            "label": "Azure Pipelines service connection",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent",
            "required": true,
            "helpMarkDown": "Specify the service connection to connect to an Azure DevOps organization or collection for agent registration.<br><br>You can create a service connection using \"+New\", and select \"Token-based authentication\". You need a [personal access token(PAT)](https://docs.microsoft.com/en-us/vsts/accounts/use-personal-access-tokens-to-authenticate?view=vsts) to setup a service connection. <br><br>​Click \"Manage\" to update the service connection details.",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "project",
            "aliases": [
                "teamProject"
            ],
            "type": "pickList",
            "label": "Team project",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent",
            "required": true,
            "helpMarkDown": "Specify the Team Project which has the Deployment Group defined in it​",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "deploymentGroupName",
            "type": "pickList",
            "label": "Deployment Group",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent",
            "required": true,
            "helpMarkDown": "Specify the Deployment Group against which the agent(s) will be registered. For more guidance, refer to [Deployment Groups](https://aka.ms/832442)",
            "properties": {
                "EditableOptions": "True"
            }
        },
        {
            "name": "copyAzureVMTags",
            "type": "boolean",
            "label": "Copy Azure VM tags to agents",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent",
            "defaultValue": true,
            "helpMarkDown": "Choose if the tags configured on the Azure VM need to be copied to the corresponding Deployment Group agent. <br><br>​By default all Azure tags will be copied following the format “Key: Value”. Example: An Azure Tag “Role : Web” would be copied  as-is to the Agent machine. <br><br>For more information on how tag Azure resources refer to [link](https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-group-using-tags​)"
        },
        {
            "name": "runAgentServiceAsUser",
            "type": "boolean",
            "label": "Run agent service as a user",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent",
            "defaultValue": false,
            "helpMarkDown": "Decide whether to run the agent service as a user other than the default. <br>The default user is \"NT AUTHORITY\\SYSTEM\" in Windows and \"root\" in Linux."
        },
        {
            "name": "userName",
            "type": "string",
            "label": "User name",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "The username to run the agent service on the virtual machines. <br>For domain users, please enter values as \"domain\\username\" or \"username@domain.com\". For local users, please enter just the user name. <br>It is assumed that the same domain user\\a local user with the same name, respectively, is present on all the virtual machines in the resource group."
        },
        {
            "name": "password",
            "type": "string",
            "label": "Password",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMWithDGAgent && runAgentServiceAsUser = true",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "The password for the user to run the agent service on the Windows VMs. <br>It is assumed that the password is the same for the specified user on all the VMs. <br>It can accept variable defined in build or release pipelines as '$(passwordVariable)'. You may mark variable as 'secret' to secure it. <br>For linux VMs, a password is not required and will be ignored. "
        },
        {
            "name": "outputVariable",
            "type": "string",
            "label": "VM details for WinRM",
            "required": false,
            "defaultValue": "",
            "groupName": "AdvancedDeploymentOptions",
            "visibleRule": "enableDeploymentPrerequisites = ConfigureVMwithWinRM || enableDeploymentPrerequisites = None",
            "helpMarkDown": "Provide a name for the variable for the resource group. The variable can be used as $(variableName) to refer to the resource group in subsequent tasks like in the PowerShell on Target Machines task for deploying applications. <br>Valid only when the selected action is Create, Update or Select, and required when an existing resource group is selected."
        },
        {
            "name": "addSpnToEnvironment",
            "type": "boolean",
            "label": "Access service principal details in override parameters",
            "defaultValue": "false",
            "required": false,
            "helpMarkDown": "Adds service principal id and key of the Azure endpoint you chose to the script's execution environment. You can use these variables: `$servicePrincipalId` and `$servicePrincipalKey` in your override parameters like `-key $servicePrincipalKey`",
            "groupName": "Advanced"
        }
    ],
    "dataSourceBindings": [
        {
            "target": "resourceGroupName",
            "endpointId": "$(ConnectedServiceName)",
            "dataSourceName": "AzureResourceGroups"
        },
        {
            "target": "project",
            "endpointId": "$(deploymentGroupEndpoint)",
            "dataSourceName": "Projects",
            "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "target": "deploymentGroupName",
            "endpointId": "$(deploymentGroupEndpoint)",
            "dataSourceName": "DeploymentGroups",
            "parameters": {
                "project": "$(project)"
            },
            "resultTemplate": "{ \"Value\" : \"{{{name}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        }
    ],
    "instanceNameFormat": "Azure VM: $(action) action on $(resourceGroupName)",
    "execution": {
        "Node": {
            "target": "main.js"
        }
    },
    "messages": {
        "CheckResourceGroupExistence": "Checking if the following resource group exists: %s.",
        "ResourceGroupStatusFetchFailed": "Failed to check the resource group status. Error: %s.",
        "ResourceGroupStatus": "Resource group exists: %s.",
        "ResourceGroupCreationFailed": "Failed to create the resource group. Error: %s",
        "CreatingNewRG": "Creating resource Group: %s",
        "CreatedRG": "Resource Group created successfully.",
        "CreatingTemplateDeployment": "Creating deployment parameters.",
        "TemplateParsingFailed": "Ensure the Template file ( '%s' ) is valid. Task failed while parsing with following error: %s",
        "FileFetchFailed": "Failed to download the file. URL: '%s'. Error: %s",
        "ParametersFileParsingFailed": "Ensure the Parameters file ( '%s' ) is valid. Task failed while parsing with following error: %s",
        "StartingDeployment": "Starting Deployment.",
        "CreateTemplateDeploymentSucceeded": "Successfully deployed the template.",
        "CreateTemplateDeploymentFailed": "Task failed while creating or updating the template deployment.",
        "ErrorsInYourDeployment": "There were errors in your deployment. Error code: %s.",
        "Details": "Details:",
        "ErrorType": "Error Type:",
        "PolicyDefinitionName": "Policy Definition Name :",
        "PolicyAssignmentName": "Policy Assignment Name :",
        "StartingValidation": "Starting template validation.",
        "ValidDeployment": "Template deployment validation was completed successfully.",
        "CreateTemplateDeploymentValidationFailed": "Template validation failed. Error: %s.",
        "TemplateValidationHadErrors": "Task failed while validating the template deployment.",
        "DeletingResourceGroup": "Deleting resource group: %s",
        "CouldNotDeletedResourceGroup": "Could not delete resource group: '%s'. Operation failed with error: %s",
        "DeletedResourceGroup": "Deleted resource group: %s",
        "VM_ListFetchFailed": "Failed to fetch the list of virtual machines from resource group: %s. Error: %s",
        "NoVMsFound": "No virtual machines found in the resource group.",
        "VM_Start": "Starting virtual machine: %s",
        "VM_Restart": "Restarting virtual machine: %s",
        "VM_Stop": "Stopping virtual machine: %s",
        "VM_Deallocate": "Deallocating virtual machine: %s",
        "VM_Delete": "Deleting virtual machine: %s",
        "SucceededOnVMOperation": "Operation: '%s' succeeded on all the virtual machines.",
        "FailureOnVMOperation": "Operation: '%s' did not succeed on all the virtual machines. Errors: \n%s",
        "VirtualMachineNameAndError": "%s: %s",
        "RegisteringEnvironmentVariable": "Selecting the resource group details: %s.",
        "FailedToFetchNetworkInterfaces": "Failed to fetch the list of network interfaces. Error: %s.",
        "FailedToFetchLoadBalancers": "Failed to fetch the list of load balancers. Error: %s.",
        "FailedToFetchPublicAddresses": "Failed to fetch the list of public addresses. Error: %s.",
        "AddedToOutputVariable": "Resource group details were saved in following output variable: %s.",
        "InvalidAction": "This action is not defined. Check with the task author.",
        "TaskNotFound": "Task.json file could not be found: %s",
        "AzureVM_ConstructorFailed": "Task failed while initializing. Error: %s",
        "RuleExistsAlready": "Rule %s already exists on the security group '%s'",
        "AddExtension": "Adding extension '%s' on virtual machine '%s'",
        "DeleteExtension": "Trying to delete extension %s from virtual machine %s",
        "FailedToAddExtension": "Failed to add the network security rule with exception: %s",
        "AddingSecurityRuleNSG": "Adding security rule for the network security group: %s",
        "AddedSecurityRuleNSG": "Added inbound network security rule config %s with priority %s for port %s under security group %s with result: %s",
        "FailedAddingNSGRule3Times": "Failed to add the network security rule to the security group %s after trying 3 times",
        "FailedToDeleteExtension": "Deletion of extension failed",
        "CredentialsCannotBeNull": "'credentials' cannot be null.",
        "SubscriptionIdCannotBeNull": "'subscriptionId' cannot be null.",
        "CallbackCannotBeNull": "callback cannot be null.",
        "ResourceGroupCannotBeNull": "resourceGroupName cannot be null or undefined and it must be of type string.",
        "ResourceGroupExceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MaxLength\": 90",
        "ResourceGroupDeceededLength": "\"resourceGroupName\" should satisfy the constraint - \"MinLength\": 1",
        "ResourceGroupDoesntMatchPattern": "\"resourceGroupName\" should satisfy the constraint - \"Pattern\": /^[-\\w\\._\\(\\)]+$/",
        "ParametersCannotBeNull": "parameters cannot be null or undefined.",
        "DeploymentNameCannotBeNull": "deploymentName cannot be null or undefined and it must be of type string.",
        "VMNameCannotBeNull": "vmName cannot be null or undefined and it must be of type string.",
        "InvalidValue": "%s is not a valid value. The valid values are: %s",
        "VmExtensionNameCannotBeNull": "vmExtensionName cannot be null or undefined and it must be of type string.",
        "ExpandShouldBeOfTypeString": "expand must be of type string.",
        "ExtensionParametersCannotBeNull": "extensionParameters cannot be null or undefined.",
        "ClientIdCannotBeEmpty": "clientId must be a non empty string.",
        "DomainCannotBeEmpty": "domain must be a non empty string.",
        "SecretCannotBeEmpty": "secret must be a non empty string.",
        "armUrlCannotBeEmpty": "arm URL must be a non empty string.",
        "authorityUrlCannotBeEmpty": "authority must be a non empty string.",
        "LoadBalancerNameCannotBeNull": "'loadBalancerName cannot be null or undefined and it must be of type string.'",
        "NetworkInterfaceNameCannotBeNull": "networkInterfaceName cannot be null or undefined and it must be of type string.",
        "NetworkSecurityGroupNameCannotBeNull": "networkSecurityGroupName cannot be null or undefined and it must be of type string.",
        "SecurityRuleNameCannotBeNull": "securityRuleName cannot be null or undefined and it must be of type string.",
        "SecurityRuleParametersCannotBeNull": "securityRuleParameters cannot be null or undefined.",
        "OutputVariableShouldNotBeEmpty": "Output variable should not be empty.",
        "AzureVM_SetExtensionFailedForVm": "Standard Error Message: Failed to set extension on Virtual Machine %s. Error: %s",
        "InvalidResponseLongRunningOperation": "Invalid response received for fetching status of a long running operation.",
        "AddingInboundNatRule": "Adding Inbound Nat Rule for the Virtual Machine %s to the Load Balancer %s",
        "InboundNatRuleAdditionFailed": "Addition of Inbound Nat Rule to the Load Balancer %s failed. Error: %s ",
        "InboundNatRulesToNICFailed": "Addition of rule Id to the loadBalancerInboundNatRules of nic %s failed with the error: %s",
        "AddedTargetInboundNatRuleLB": "Added the target virtual machine for the inbound NAT rules of load balancer %s",
        "FailedToFetchInstanceViewVM": "Failed to fetch the instance view of the virtual machine. Error : %s",
        "CreationOfExtensionFailed": "Failed to add the extension to the vm: '%s'. Error: %s",
        "AddedExtension": "Successfully added the WinRMCustomScriptExtension for the virtual Machine %s",
        "AddingExtensionSucceeded": "Addition of extension on vm %s succeeded",
        "DeletionSucceeded": "Deletion of extension on vm %s succeeded",
        "AdditionFailed": "Addition of %s on vm %s failed. Error : %s",
        "DeletionFailed": "Deletion of %s on vm %s failed. Error : %s",
        "DeleteAgentManually": "After the task execution completes, if the deployment group agent corresponding to the virtual machine %s is present but not active in the deployment group %s, then please delete it manually from the deployment group.",
        "DGAgentAddedOnAllVMs": "Deployment group agent added on all virtual machines of the resource group",
        "DGAgentDeletedFromAllVMs": "Deployment group agent deleted from all virtual machines of the resource group",
        "DGAgentHandlerMajorVersion": "Deployment group extension handler major version is 1",
        "VMStartFailed": "Could not start the virtual machine %s. Error : %s",
        "VMStarted": "Started virtual machine: %s",
        "VMTransitioningSkipExtensionAddition": "Virtual machine %s is in a transitioning state. Skipping adding extension on it.",
        "VMDetailsFetchFailed": "Could not get details of virtual machine %s. Error : %s",
        "VMDetailsFetchSucceeded": "Fetched details of virtual machine %s.",
        "AddingDGAgentOnVMs": "Adding deployment group agent on the resource group virtual machines.",
        "DeletingDGAgentOnVMs": "Deleting deployment group agent on virtual machines",
        "AddingExtensionFailed": "Addition of extension on vm %s failed",
        "TimeoutWhileWaiting": "Timed out while waiting",
        "InvalidTemplateLocation": "The template location supplied is invalid. Task only supports 'Linked artifact' or 'URL of the file'",
        "EncodingNotSupported": "Encoding of the file '%s' is '%s' which is not supported. Supported file encodings are ['utf-8', 'utf-16le']",
        "CouldNotDetectEncoding": "Could not detect encoding of file '%s'",
        "DetectedFileEncoding": "The detected encoding for file '%s' is '%s'",
        "HostUrlCannotBeEmpty": "Host URL must be a non empty string.",
        "PatTokenCannotBeEmpty": "Personal access token must be a non empty string.",
        "OnlyTokenAuthAllowed": "Service connection can be of Token authorization type only.",
        "DeploymentGroupEndpointUrlCannotBeEmpty": "Deployment group service connection URL cannot be empty",
        "DeploymentGroupEndpointPatTokenCannotBeEmpty": "Deployment group service connection personal access token cannot be empty",
        "ErrorWhileParsingParameter": "There was an error while overriding '%s' parameter because of '%s', make sure it follows JavaScript Object Notation (JSON)",
        "TemplateFilePatternMatchingMoreThanOneFile": "Found multiple files matching template file pattern: %s",
        "TemplateParameterFilePatternMatchingMoreThanOneFile": "Found multiple files matching template parameters file pattern: %s",
        "TemplateFilePatternMatchingNoFile": "Could not find any file matching the template file pattern",
        "TemplateParameterFilePatternMatchingNoFile": "Could not find any file matching the template file pattern",
        "ParametersPatternMatchesADirectoryInsteadOfAFile": "Parameters file pattern matches a directory instead of a file.",
        "CsmFilePatternMatchesADirectoryInsteadOfAFile": "Template file pattern matches a directory instead of a file: %s",
        "ResourceNameCannotBeNull": "Resource name cannot be null.",
        "ProvisioningStatusOfExtensionIsNotSucceeded": "Provisioning State of WinRMCustomScriptExtension is not succeeded on vm: '%s'.",
        "ListingOfExtensionsFailed": "Failed to list the extensions for the vm: '%s'. Error '%s'",
        "ExtensionNotFound": "Extension not found on the vm: %s",
        "AddedOutputVariable": "Updated output variable '%s', which contains the outputs section of the current deployment object in string format.",
        "UnableToFetchAuthorityURL": "Unable to fetch authority URL.",
        "UnableToFetchActiveDirectory": "Unable to fetch Active Directory resource ID.",
        "SpecifiedAzureRmEndpointIsInvalid": "Specified AzureRm service connection URL: '{0}' is invalid.",
        "FailedToFetchAzureStackDependencyData": "Failed to fetch azure stack dependency data, error message: {0}",
        "UnableToReadResponseBody": "Unable to read response body. Error: %s",
        "CouldNotFetchAccessTokenforAzureStatusCode": "Could not fetch access token for Azure. Status code: %s, status message: %s",
        "CouldNotFetchAccessTokenforMSIDueToMSINotConfiguredProperlyStatusCode": "Could not fetch access token for Managed Service Principal. Please configure Managed Service Identity (MSI) for virtual machine 'https://aka.ms/azure-msi-docs'. Status code: %s, status message: %s",
        "CouldNotFetchAccessTokenforMSIStatusCode": "Could not fetch access token for Managed Service Principal. Status code: %s, status message: %s",
        "UserNameCannotBeNull": "If the 'Run agent service as a user' input is selected, then 'User name' cannot be null.",
        "ASE_SSLIssueRecommendation": "To use a certificate, the certificate must be signed by a trusted certificate authority. If getting certificate validation errors, you're probably using a self-signed certificate and to resolve them you need to set a variable named VSTS_ARM_REST_IGNORE_SSL_ERRORS to the value true in the build or release pipeline.",
        "MoreInformationOnAzurePortal": "More information on Azure Portal",
        "ResponseNotValid": "Response is not in a valid format",
        "LogDeploymentName": "Deployment name is %s",
        "ExpiredServicePrincipal": "Could not fetch access token for Azure. Verify if the Service Principal used is valid and not expired.",
        "DeploymentGroupConfigurationNotSucceeded": "Deployment group configuration did not succeed on one or more Virtual Machine(s): %s",
        "DeploymentGroupConfigurationFailedOnVM": "Failure for Virtual Machine '%s': %s"
    }
}