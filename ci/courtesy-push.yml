steps:
- task: NuGetToolInstaller@0
  inputs:
    versionSpec: '5.4.0'
  displayName: 'Install nuget'

- task: DownloadBuildArtifacts@0
  inputs:
    artifactName: IndividualNugetPackages
    downloadPath: 'IndividualNugetPackagesDownloaded'
  displayName: 'Download Artifact'

- script: dir

- script: node azure-pipelines-tasks\ci\courtesy-push\courtesy-push.js AzureDevOps\.nuget\externals\UnifiedDependencies.xml IndividualNugetPackagesDownloaded\IndividualNugetPackages\unified_deps.xml
  displayName: 'Update unified deps'

- task: NuGetAuthenticate@0
  inputs:
    nuGetServiceConnections: 'Codex-Deps'
  displayName: 'Authenticate with nuget'

# Everything until this point is idempotent (other than pushing tasks release branch which will get overwritten if we re-do this anyways).
# Note: Pushing the tasks release branch has to happen in the first job in case commits are pushed between now and then.

- script: |
    cd IndividualNugetPackagesDownloaded
    cd IndividualNugetPackages
    push.cmd
  displayName: 'Push Nuget packages'

- powershell: |
    # Build the release branch name
    $startdate = Get-Date -Date '2020-01-20'
    $enddate = Get-Date
    $difference = New-TimeSpan -Start $startdate -End $enddate
    $sprintsSince165 = ($difference.Days/21) - (($difference.Days/21)%1) # Weirdly, PowerShell modulo is actually a remainder operator. This gets the actual modulo value.
    $currentSprint = $sprintsSince165 + 165
    $releaseBranch = "users/damccorm/test/m" + $currentSprint + "/courtesyPush"

    # Push branch to git
    Write-Host "Pushing branch to AzureDevOps"
    cd AzureDevOps
    git checkout -b $releaseBranch
    git config --global user.email "damccorm@microsoft.com"
    git config --global user.name "Danny McCormick"
    git add .nuget\externals\UnifiedDependencies.xml
    git commit -m "Courtesy bump of tasks"
    git push origin $releaseBranch

    Write-Host "Creating Pull Request"
    cd ..\azure-pipelines-tasks\ci\courtesy-push
    npm install
    node open-courtesy-push-pull-request.js $releaseBranch
  displayName: Create PR in Azure DevOps
  env:
    TOKEN: $(Package.Token)